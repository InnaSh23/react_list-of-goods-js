{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_LENGTH","SORT_FIELD_ALPHABET","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","reverse","getPreparedGoods","className","type","cn","onClick","disabled","map","good","ReactDOM","render","document","getElementById"],"mappings":"mPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAoB,SACpBC,EAAsB,iBA2BrB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA5BR,SAA0BC,EAA1B,GAA6D,IAA1BL,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WACtCI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAMR,GAAaS,EAAMT,GAElC,KAAKH,EACH,OAAOW,EAAME,cAAcD,GAE7B,QACE,OAAO,MAKXP,GACFI,EAAcK,UAGTL,EAMcM,CACnBjB,EAAiB,CAAEK,YAAWE,eAchC,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYf,IAAcH,IAE5BmB,QAAS,WACPf,EAAaJ,GACbM,GAAc,IAPlB,iCAaA,wBACEW,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYf,IAAcJ,IAE5BoB,QAAS,WACPf,EAAaL,GACbO,GAAc,IAPlB,4BAaA,wBACEW,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,aAAcf,GAAaE,KAE7Bc,QA7CmB,WACzBb,GAAeD,IA6CTe,SAAUjB,IAAcH,EAN1B,qBAYCG,GAAaE,EACZ,wBACEY,KAAK,SACLD,UAAWE,IAAG,SAAU,YAAa,CACnC,aAAcf,GAAaE,KAE7Bc,QAtDe,YACnBd,GAAcF,KAChBG,GAAc,GACdF,EAAa,MA8CT,mBASE,QAGN,6BACGG,EAAac,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCvHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e5c98267.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_LENGTH = 'length';\nconst SORT_FIELD_ALPHABET = 'alphabetically';\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_LENGTH:\n          return good1[sortField] - good2[sortField];\n\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortField, isReversed },\n  );\n\n  const handleReverseClick = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleResetClick = () => {\n    if (isReversed || sortField) {\n      setIsReversed(false);\n      setSortField('');\n    }\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_FIELD_ALPHABET,\n          })}\n          onClick={() => {\n            setSortField(SORT_FIELD_ALPHABET);\n            setIsReversed(false);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n          onClick={() => {\n            setSortField(SORT_FIELD_LENGTH);\n            setIsReversed(false);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !(sortField || isReversed),\n          })}\n          onClick={handleReverseClick}\n          disabled={sortField === SORT_FIELD_ALPHABET}\n        // disabled={!sortField && !isReversed}\n        >\n          Reverse\n        </button>\n\n        {sortField || isReversed ? (\n          <button\n            type=\"button\"\n            className={cn('button', 'is-danger', {\n              'is-light': !(sortField || isReversed),\n            })}\n            onClick={handleResetClick}\n          >\n            Reset\n          </button>\n        ) : null}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n      {/* <GoodsList goods={visibleGoods} /> */}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}